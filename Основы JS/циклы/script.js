// for (let i = 0; i < 10; i++){
//     if (i % 2 == 0) continue;
//     alert(i);
// }

// наглядно как префикс и постфикс влияет на результат ниже:
// let i = 0;   от 1 до 4    
// while (++i < 5) alert( i );   При i = 4 произойдёт увеличение i до 5, а потом сравнение while (5 < 5) – это неверно. Поэтому на этом цикл остановится, и значение 5 выведено не будет

// let i = 0;   от 1 до 5
// while (i++ < 5) alert( i );  она увеличивает i до 5, но возвращает старое значение. Таким образом, сравнение фактически равно while (4 < 5) – true, поэтому срабатывает alert.

// let i = 0;
// while (i < 3) {
//     alert (i);
//     i++;
// }

// let j = 0;
// while (j++ < 5) alert( j );


// for (let i = 0; i < 3; i++) {
//     alert( `number ${i}!` );
//   }

// let offer = prompt('Введите число больше 100?', '');
// if(offer < 100){
//     for(; offer < 100;offer++){
//         let lol = prompt('Введите число больше 100?', '')
//         if(lol > 100) break;
//     }
// }

// let num;

// do {
//   num = prompt("Введите число больше 100?", 0);
// } while (num <= 100 && num); 
//Кстати, сравнение num <= 100 при вводе null даст true, так что вторая проверка необходима
//Это из-за получения значения null (с помощью && num) 
//Проверка && num вычисляется в false, когда num имеет значение null или пустая строка ''
// null <= или >= 0 - равно true
// Пока условия цикла = true - цикл не прекращается. Нужно одно лишь значение false (употребление &&)
// это, в данном случае, либо введение напрямую - null либо нажатие кнопки отмены (возвращает null)


// for (let i = 0; i < 3; i++) {
//   for (let j = 0; j < 3; j++) {

//     let input = prompt(`Значение на координатах (${i},${j})`, '');

    
//   }
// }

// alert('Готово!'); КАК Я ПОНЯЛ, ЗДЕСЬ, ЕСЛИ ЧТО ВТОРОЙ FOR УСПЕШНО ВЫПОЛНЯЕТ 
// СВОЁ ТЕЛО И ШАГ (ШАГ ПОСЛЕ ВЫВОДА PROMPT) - ТО В ПЕРВОМ FOR ШАГ - НЕ ВЫПОЛНЯЕТСЯ!!!


// let n = 10;

// nextPrime:
// for (let i = 2; i <= n; i++) { 

//   for (let j = 2; j < i; j++) { 
//     if (i % j == 0) continue nextPrime; 
//   }

//   alert( i ); 
// }

// Объяснение пошагово: P.S - ОЧЕНЬ ВАЖНО ПОМНИТЬ ПРИНЦИП РАБОТЫ FOR Т.Е (НАЧАЛАО - УСЛОВИЕ - ТЕЛО - ШАГ). ШАГ ВЫПОЛНЯЕТСЯ ПОСЛЕ ТЕЛА!!!
// Первый for выполняет начало (i = 2) и запускает второй for, где выполняется начало (j = 2);
// 2-ка от первого начала попадает под условие (j < i) и, из-за несоответствия (2<2) - выводит false и 
// второй цикл прерывается
// Когда второй цикл прерывается он, "ищя выход" запускает alert(i)
// После запуска alert(i) он (2-й for) ЗАНОВО ЗАПУСКАЕТ ПЕРВЫЙ FOR, который истиннен и для второго for
// Соответственно после удачного условия выполняется тело
// Т.к после самой первой итераций произошёл порядок (начало - условие - выполнение тела - шаг)
// мы теперь, во втором for сравниваем (j < i) (2 < 3). 3-ка появилась от первой успешной итерации первого for
// Далее - условие второго for выводит true и запускает тело с if
// По условию if - если 3-ка делится на 2-ку без остатка (true), то мы переходим к следующей итерации
//  через continue и результат не выводится в alert (i)
// Но 3-ка не делится на 2-ку без остатка, что выдаёт нам false
// Имея false - второй for прерывается, и выводит 3-ку в alert(i)

// Провернув это всё с 4-кой, мы получим true в условии if, что пропустит 
// итерацию и перейдёт по маячку в начала, т.е в первый for



// outer: for (let i = 0; i < 3; i++) {

//   for (let j = 0; j < 3; j++) {

//     let input = prompt(`Значение на координатах (${i},${j})`, '');

//     // если пустая строка или Отмена, то выйти из обоих циклов
//     if (!input) break outer; // (*)

//     // сделать что-нибудь со значениями...
//   }
// }

// alert('Готово!');

let i;
do {i = prompt('Число больше чем 100?', '')} while (i <= 100 && i);

//do...while условие под телом 
// Цикл сначала выполнит тело, а затем проверит условие condition, и пока 
// его значение равно true, он будет выполняться снова и снова.